

spring.datasource.url=jdbc:mysql://192.168.40.129:3306/test
spring.datasource.username=root 
spring.datasource.password=111111 
#spring.datasource.driver-class-name=com.mysql.jdbc Driver 
＃最大等待连接中的数量，设。为没有限制
spring.datasource.tomcat.max-idle=10 
＃最大连接活动数
spring.datasource.tomcat.max-active=50
＃最大等待毫秒数，单位为ms，超过时间会出错误信息
spring.datasource.tomcat. max-wait=10000 
＃数据库连接池初始化连接数
spring.datasource.tomcat.initial-size=5

＃使用MySQL数据库方言
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect 
＃打印数据库SQL
spring.jpa.show-sql=true
＃选择Hibernate数据定义语言（DDL〕策略为update
spring.jpa.hibernateddl-auto=update

logging.level.root=debug


# REDIS (Redis 配置)
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
# 登录redis服务器的密码。
#spring.redis.password= 
## 给定时间池可以分配的最大连接数。 使用负值为无限制。
#spring.redis.pool.max-active=200
## 池中“空闲”连接的最大数量。 使用负值来表示无限数量的空闲连接。
#spring.redis.pool.max-idle=300
## 连接分配在池耗尽之前在抛出异常之前应阻止的最大时间量（以毫秒为单位）。 使用负值无限期地阻止。
#spring.redis.pool.max-wait=100
## 定义池中维护的最小空闲连接数。 此设置只有在正值时才有效果。
#spring.redis.pool.min-idle=0
# 连接工厂使用的数据库索引。
spring.redis.database=0
# Redis服务器主机。
spring.redis.host=192.168.40.129
# redis服务器端口
spring.redis.port=6379
# redis服务器名称
#spring.redis.sentinel.master=
# 
#spring.redis.sentinel.nodes= 
# 连接超时（毫秒）。
spring.redis.timeout=0

